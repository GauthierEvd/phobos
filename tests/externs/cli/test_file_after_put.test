#!/bin/bash

#
#  All rights reserved (c) 2014-2023 CEA/DAM.
#
#  This file is part of Phobos.
#
#  Phobos is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation, either version 2.1 of the Licence, or
#  (at your option) any later version.
#
#  Phobos is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Phobos. If not, see <http://www.gnu.org/licenses/>.
#

test_dir=$(dirname $(readlink -e $0))
. $test_dir/test_env.sh
. $test_dir/setup_db.sh
. $test_dir/test_launch_daemon.sh

function dir_setup
{
    dirs="$(mktemp -d /tmp/test.pho.XXXX)"
    echo "adding directories $dirs"
    $phobos dir add $dirs
    $phobos dir format --fs posix --unlock $dirs
}

function setup
{
    setup_tables
    invoke_daemon
    dir_setup
}

function cleanup
{
    waive_daemon
    drop_tables
    rm -rf $dirs
}

function hash_compare
{
    if [[ "$1" != *"None"* ]]; then
        if [[ "$2" == "" ]]; then
            error "Object hash not set"
        elif [[ "$2" != "$1" ]]; then
            error "Object hashs not equal"
        fi
    fi
}

function test_file_after_put
{
    $phobos put --family dir /etc/hosts oid1 ||
        error "Object should be put"
    cd $dirs/$(ls $dirs)/
    cd $(ls)

    local ext_req=$($phobos extent list --output all | sed '3q;d' | sed "s/[][' ]//g")
    local address=$(echo $ext_req | cut -d'|' -f2)
    local md5=$(echo $ext_req | cut -d'|' -f6)
    local oid=$(echo $ext_req | cut -d'|' -f8)
    local uuid=$(echo $ext_req | cut -d'|' -f11)
    local version=$(echo $ext_req | cut -d'|' -f12)
    local xxh128=$(echo $ext_req | cut -d'|' -f13)

    local file_name=$(ls)
    local path_oid=$(echo $file_name | cut -d'.' -f1)
    local path_version=$(echo $file_name | cut -d'.' -f2)
    local path_layout=$(echo $file_name | cut -d'.' -f3 | cut -d'-' -f1)
    local path_uuid=$(echo $file_name | cut -d'.' -f4)

    local xattr_md5=$(getfattr -n user.md5 -e text --only-values "$dirs/$address")
    local xattr_xxh128=$(getfattr -n user.xxh128 -e text --only-values "$dirs/$address")

    [[ "$path_oid" == "$oid" ]] || error "Object ids do not match"
    [[ "$path_version" == "$version" ]] || error "Object versions do not match"
    [[ "$path_uuid" == "$uuid" ]] || error "Object uuids do not match"
    [[ "$path_layout" == "r1" ]] || error "Object layout is not Raid1"

    hash_compare "$md5" "$xattr_md5"
    hash_compare "$xxh128" "$xattr_xxh128"
}

TEST_SETUP=setup
TEST_CLEANUP=cleanup
TESTS=("test_file_after_put")
