#!/bin/bash

#
#  All rights reserved (c) 2014-2024 CEA/DAM.
#
#  This file is part of Phobos.
#
#  Phobos is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation, either version 2.1 of the Licence, or
#  (at your option) any later version.
#
#  Phobos is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Phobos. If not, see <http://www.gnu.org/licenses/>.
#

#
# Integration test for deletion feature
#

test_dir=$(dirname $(readlink -e $0))
. $test_dir/test_env.sh
. $test_dir/setup_db.sh
. $test_dir/tape_drive.sh
. $test_dir/test_launch_daemon.sh
. $test_dir/utils_generation.sh

set -xe

function setup_dir
{
    setup_tables
    invoke_lrs

    setup_test_dirs
    setup_dummy_files 1

    $phobos dir add "$DIR_TEST_OUT"
    $phobos dir format --fs posix --unlock "$DIR_TEST_OUT"
}

function setup_tape
{
    setup_tables
    invoke_daemons

    setup_test_dirs
    setup_dummy_files 1

    export drive="$(get_lto_drives 5 1)"
    export medium="$(get_tapes L5 1)"

    $phobos drive add --unlock $drive
    $phobos tape add -t lto5 $medium
    $phobos tape format --unlock $medium
}

function cleanup_dir
{
    waive_lrs

    cleanup_dummy_files
    cleanup_test_dirs

    drop_tables
}

function cleanup_tape
{
    waive_daemons

    drain_all_drives
    cleanup_dummy_files
    cleanup_test_dirs

    drop_tables
}

function test_delete
{
    local prefix=$(generate_prefix_id)

    local oid=${prefix}_id

    $phobos put --family dir "${FILES[0]}" $oid ||
        error "Object should be put"
    $valg_phobos delete $oid ||
        error "Object should be deleted"
    $phobos get $oid test_tmp &&
        error "Object should not be got"

    [ -z $($phobos object list $oid) ] ||
        error "Object should not be listed, because deleted"
    [ -z $($phobos object list --deprecated $oid) ] &&
        error "Object should be listed with the deprecated option"
    [ -z $($phobos object list --deprecated --output uuid $oid) ] &&
        error "Object should be listed with the deprecated option and "\
              "the uuid output filter"

    return 0
}

function test_tape_hard_delete
{
    local prefix=$(generate_prefix_id)
    local oid=${prefix}_id

    $phobos put "${FILES[0]}" $oid ||
        error "Object should be put"
    $valg_phobos delete --hard $oid ||
        error "Object should be deleted"

    [ -z $($phobos object list $oid) ] ||
        error "Object should not be listed, because deleted"
    [ -z $($phobos object list --deprecated $oid) ] ||
        error "Object should not be listed, because hard deleted"

    nb=$($PSQL -t -c "SELECT COUNT(*) FROM layout;")
    if [ $nb -ne 0 ]; then
        error "Hard delete should have delete layout info on tape"
    fi
    nb=$($PSQL -t -c "SELECT COUNT(*) FROM extent WHERE state='orphan';")
    if [ $nb -ne 1 ]; then
        error "Hard delete should have keep the extent info on tape"
    fi
}

TESTS=(
    "setup_dir; test_delete; cleanup_dir"
)

if [[ -w /dev/changer ]]; then
    TESTS+=("setup_tape; test_tape_hard_delete; cleanup_tape")
fi
