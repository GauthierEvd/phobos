#!/bin/bash
# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

#
#  All rights reserved (c) 2014-2023 CEA/DAM.
#
#  This file is part of Phobos.
#
#  Phobos is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation, either version 2.1 of the Licence, or
#  (at your option) any later version.
#
#  Phobos is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Phobos. If not, see <http://www.gnu.org/licenses/>.
#

#
# Integration test for phobos_locate API calls
#

test_dir=$(dirname $(readlink -e $0))
test_bin="./test_locate"
. $test_dir/test_env.sh
. $test_dir/setup_db.sh
. $test_dir/test_launch_daemon.sh
. $test_dir/tape_drive.sh

function dir_setup
{
    local other_host="hostname" # fetched from test_locate.c

    setup_tables

    export dirs="
        $(mktemp -d /tmp/test.pho.XXXX)
        $(mktemp -d /tmp/test.pho.XXXX)
    "
    export extra_dir="$(mktemp -d /tmp/test.pho.XXXX)"
    echo "adding directories $dirs $extra_dir"

    # Invoke the daemon from $other_host to allow formatting the dir with the
    # correct naming (dir devices must contain the hostname in their name)
    hostname $other_host
    invoke_lrs

    $phobos dir add $extra_dir
    $phobos dir format --fs posix --unlock $extra_dir

    # Waive the daemon and restart it back as $SELF_HOST to add the rest of the
    # dirs
    waive_lrs
    hostname $SELF_HOST
    invoke_lrs

    $phobos dir add $dirs
    $phobos dir format --fs posix --unlock $dirs
}

function tape_setup
{
    local N_TAPES=2
    local N_DRIVES=4
    local LTO5_TAGS=$TAGS,lto5
    local LTO6_TAGS=$TAGS,lto6
    local other_hostname="hostname" # fetched from test_locate.c

    setup_tables
    invoke_daemons

    # get LTO5 tapes
    local lto5_tapes="$(get_tapes L5 $N_TAPES)"
    echo "adding tapes $lto5_tapes with tags $LTO5_TAGS..."
    $phobos tape add --tags $LTO5_TAGS --type lto5 "$lto5_tapes"

    # get LTO6 tapes
    local lto6_tapes="$(get_tapes L6 $N_TAPES)"
    echo "adding tapes $lto6_tapes with tags $LTO6_TAGS..."
    $phobos tape add --tags $LTO6_TAGS --type lto6 "$lto6_tapes"

    # set tapes
    tapes="$lto5_tapes $lto6_tapes"

    # unlock all tapes
    for t in $tapes; do
        $phobos tape unlock "$t"
    done

    # get drives
    local lto6drives=$(get_lto_drives 6 $N_DRIVES)
    IFS=' ' read -r -a lto6drives <<< "$lto6drives"
    local self_lto6drives="${lto6drives[0]} ${lto6drives[1]}"
    local other_lto6drives="${lto6drives[2]} ${lto6drives[3]}"

    local lto5drives=$(get_lto_drives 5 $N_DRIVES)
    IFS=' ' read -r -a lto5drives <<< "$lto5drives"
    local self_lto5drives="${lto5drives[0]} ${lto5drives[1]}"
    local other_lto5drives="${lto5drives[2]} ${lto5drives[3]}"

    $phobos drive add --unlock ${other_lto6drives[@]}
    $phobos drive add --unlock ${other_lto5drives[@]}

    # format lto5 tapes
    $phobos --verbose tape format $lto5_tapes --unlock
    # format lto6 tapes
    $phobos --verbose tape format $lto6_tapes --unlock

    # change the host of 4 of drives to give them to $other_hostname
    $PSQL << EOF
UPDATE device SET host = '$other_hostname';
EOF

    # add the second part of the LT05 and LT06 drives to the current host
    $phobos drive add --unlock ${self_lto6drives[@]}
    $phobos drive add --unlock ${self_lto5drives[@]}
}

function cleanup
{
    hostname $SELF_HOST
    waive_daemons
    if [[ -w /dev/changer ]]; then
        drain_all_drives
    fi
    drop_tables
    rm -rf $dirs
    rm -f /tmp/out*
}

# since we manipulate the hostname, keep the current one around for cleanup
SELF_HOST="$(uname -n)"

TESTS=("dir_setup; $LOG_COMPILER $test_bin dir; cleanup")

if [[ -w /dev/changer ]]; then
    TESTS+=("tape_setup; $LOG_COMPILER $test_bin tape; cleanup")
fi
