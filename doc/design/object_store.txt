C library: libphobos_store

Interfaces :
    - Put/get calls from transfer tool or end-user (library or command line).
    - Processes metadata requests (search for object, query object status).
    - Call DSS to: save/query object location, store/query object metadata...
    - (not in v0) Call phobosd to prepare/release storage resources.
    - Acess devices through an adapter (eg. object-to-posix) to read/write data.

Calls:
    - put(id, src, metadata)
    - mput([(id, src, md), ...])
    - get(id, tgt)
    - del(id)
    - query(criteria)

Internals:
    - (not in v0) I/O layer to split data with the specified layout
    - Backend adapters (object-POSIX, object-object...) to locate objects on storage media.


API:
    - Transfer operations are described by the following structure:
    struct pho_xfer_desc {
        char                *pxd_objid;
        char                *pxd_fpath;
        struct pho_attrs    *pxd_attrs;     /**< For PUT operations only */
        enum pho_xfer_flags  pxd_flags;
        pho_completion_cb_t  pxd_callback;  /**< No notification if NULL */
        void                *pxd_udata;     /**< User pointer, untouched */
    };

    Bulk operations (mput only for now) take an array of struct pho_xfer_desc.
    The mput() call aims at allowing optimizations like deferred media sync by
    LRS. Sub-operations can fail individually. Results are reported by
    invoking pxd_callback() for each transfer, with the corresponding error
    code.

Bulk put (mput):
    - Bulk objects insertion is referred to as 'mput'.
    - In v0: mput packs multiple objects and write them under a same intent
      and with a single flush.
