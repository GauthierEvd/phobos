#!/usr/bin/python

#
#  All rights reserved (c) 2014-2017 CEA/DAM.
#
#  This file is part of Phobos.
#
#  Phobos is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation, either version 2.1 of the License, or
#  (at your option) any later version.
#
#  Phobos is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Phobos. If not, see <http://www.gnu.org/licenses/>.
#

import psycopg2
import json
import sys

"""
Convert phobos database from v1.0 to v1.1:
  - update db schema
  - retrieve all entries from extent and media and set the json integer fields
    with the appropriate type.
"""

CONN_STR = "dbname='phobos' user='phobos' host='localhost' password='phobos'"

class Migrator:
    """StrToInt JSONB conversion engine"""
    def __init__(self, **kwargs):
        self.conn = None

    def connect(self):
        self.conn = psycopg2.connect(CONN_STR)

    def disconnect(self):
        self.conn.close()
        self.conn = None

    def convert_schema_0_to_1(self):
        """
        DB schema changes:
        - drop type::extent_lyt_type
        - add media::fs_label after fs_type with the previous value of 'id'
        - extent:
            * pk of extent is only oid
            * drop field copy_num
            * drop field lyt_type
            * lyt_info='{"name":"simple","major":0,"minor":1}'
        """
        cur = self.conn.cursor()
        cur.execute("""
-- column order doesn't matter
ALTER TABLE media ADD COLUMN fs_label VARCHAR(32) DEFAULT '' NOT NULL;

-- First remove PRIMARY KEY attribute of former PRIMARY KEY
ALTER TABLE extent DROP CONSTRAINT extent_pkey;
-- Then set the new PRIMARY KEY
ALTER TABLE extent ADD PRIMARY KEY (oid);

-- drop fields copy_num and lyt_type
ALTER TABLE extent DROP COLUMN copy_num;
ALTER TABLE extent DROP COLUMN lyt_type;

-- set layout info for existing extents
UPDATE extent SET lyt_info='{"name":"simple","major":0,"minor":1}';

-- Drop the type once no column use it
-- Don't precise 'IF EXISTS' as the DB schema is supposed to be 1.0
-- so the type is supposed to exist.
DROP TYPE extent_lyt_type;""")
        self.conn.commit()
        cur.close()

    def convert_extent(self):
        update = []
        cur = self.conn.cursor()
        cur.execute("""SELECT oid, extents FROM extent""")
        for row in cur.fetchall():
            attr = json.loads(row[1])
            attr[0]['sz'] = int(attr[0]['sz'])
            update.append((row[0], attr))

        for u in update:
            qry = "UPDATE extent SET extents='%s' WHERE oid='%s'" % \
                (json.dumps(u[1]), u[0])
            cur.execute(qry)
        self.conn.commit()
        cur.close()

    def convert_media(self):
        update = []
        cur = self.conn.cursor()
        cur.execute("""SELECT id, stats FROM media""")
        for row in cur.fetchall():
            stats = json.loads(row[1])
            for f in ('nb_obj', 'last_load', 'nb_errors', 'logc_spc_used',
                      'phys_spc_free', 'phys_spc_used'):
                if stats.has_key(f):
                    stats[f] = int(stats[f])
            update.append((row[0], stats))

        for u in update:
            qry = "UPDATE media SET stats='%s' WHERE id='%s'" % \
                (json.dumps(u[1]), u[0])
            cur.execute(qry)
        self.conn.commit()
        cur.close()

    def convert_0_to_1(self):
        """Convert DB from model 0 (until phobos v1.0) to 1 (phobos v1.1+)"""
        self.connect()
        self.convert_schema_0_to_1()
        self.convert_extent()
        self.convert_media()
        self.disconnect()

def main(args=sys.argv):
    go = raw_input("""You are about to upgrade database from phobos v1.0 to v1.1
Do you want to continue? [y/N]: """)
    if go != 'y':
        sys.exit(1)

    Migrator().convert_0_to_1()

if __name__ == '__main__':
    main()
